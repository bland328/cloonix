#!/bin/bash
HERE=`pwd`
NINJA=${HERE}/../../common/meson_ninja
DPDK=${HERE}/../dpdk
TARGZSTORE=${HERE}/../../../targz_store
NAME=tldk
NAMEZ=${NAME}.tar.gz

./allclean

if [ ! -f ${NINJA}/ninja/ninja ]; then
  cd ${NINJA}
  ./cmd
fi

if [ ! -f ${DPDK}/bin/dpdk-testpmd ]; then
  cd ${DPDK}
  ./cmd
fi


cd ${HERE}
tar xvf ${TARGZSTORE}/${NAMEZ}

for i in ".git" "dpdk" "app" "doc" "mk" "test" "vagrant"; do
  rm -rf ${HERE}/${NAME}/$i
done
for i in  ".gitreview .gitignore" \
          "INFO.yaml" "Makefile" "README" \
          "examples/Makefile" \
          "examples/l4fwd/Makefile" \
          "lib/Makefile" \
          "lib/libtle_dring/Makefile" \
          "lib/libtle_timer/Makefile" \
          "lib/libtle_l4p/Makefile" \
          "lib/libtle_misc/Makefile" \
          "lib/libtle_memtank/Makefile" ; do
  rm -f ${HERE}/${NAME}/$i
done


for i in "examples/l4fwd/udp.h" \
         "examples/l4fwd/pkt.c" \
         "examples/l4fwd/common.h" \
         "examples/l4fwd/parse.c" \
         "examples/l4fwd/netbe.h" \
         "examples/l4fwd/port.h" \
         "examples/l4fwd/parse.h" \
         "lib/libtle_l4p/tcp_misc.h" \
         "lib/libtle_l4p/tcp_rxtx.c" \
         "lib/libtle_l4p/misc.h" \
         "lib/libtle_l4p/stream.h" \
         "lib/libtle_l4p/udp_rxtx.c" ; do 

  sed -i s'/ipv4_hdr/rte_ipv4_hdr/g' ${HERE}/${NAME}/$i
  sed -i s'/ipv6_hdr/rte_ipv6_hdr/g' ${HERE}/${NAME}/$i
  sed -i s'/udp_hdr/rte_udp_hdr/g' ${HERE}/${NAME}/$i
  sed -i s'/tcp_hdr/rte_tcp_hdr/g' ${HERE}/${NAME}/$i
  sed -i s'/ETHER_MTU/RTE_ETHER_MTU/g' ${HERE}/${NAME}/$i
  sed -i s'/ETHER_TYPE_IPv4/RTE_ETHER_TYPE_IPV4/g' ${HERE}/${NAME}/$i
  sed -i s'/ETHER_TYPE_IPv6/RTE_ETHER_TYPE_IPV6/g' ${HERE}/${NAME}/$i
  sed -i s'/ETHER_TYPE_VLAN/RTE_ETHER_TYPE_VLAN/g' ${HERE}/${NAME}/$i
  sed -i s'/ether_hdr/rte_ether_hdr/g' ${HERE}/${NAME}/$i
  sed -i s'/vlan_hdr/rte_vlan_hdr/g' ${HERE}/${NAME}/$i
  sed -i s'/IPV4_IHL_MULTIPLIER/RTE_IPV4_IHL_MULTIPLIER/g' ${HERE}/${NAME}/$i
  sed -i s'/ARP_OP_REPLY/RTE_ARP_OP_REPLY/g' ${HERE}/${NAME}/$i
  sed -i s'/ARP_OP_REQUEST/RTE_ARP_OP_REQUEST/g' ${HERE}/${NAME}/$i
  sed -i s'/ARP_HRD_ETHER/RTE_ARP_HRD_ETHER/g' ${HERE}/${NAME}/$i
  sed -i s'/ETHER_CRC_LEN/RTE_ETHER_CRC_LEN/g' ${HERE}/${NAME}/$i
  sed -i s'/ETHER_MAX_LEN/RTE_ETHER_MAX_LEN/g' ${HERE}/${NAME}/$i
  sed -i s'/ether_addr/rte_ether_addr/g' ${HERE}/${NAME}/$i
  sed -i s'/ETHER_MAX_JUMBO_FRAME_LEN/RTE_ETHER_MAX_JUMBO_FRAME_LEN/g' ${HERE}/${NAME}/$i
  sed -i s'/ETHER_TYPE_ARP/RTE_ETHER_TYPE_ARP/g' ${HERE}/${NAME}/$i
  sed -i s'/IPV4_HDR_IHL_MASK/RTE_IPV4_HDR_IHL_MASK/g' ${HERE}/${NAME}/$i
  sed -i s'/IPV4_HDR_DF_FLAG/RTE_IPV4_HDR_DF_FLAG/g' ${HERE}/${NAME}/$i
  sed -i s'/arp_hdr/rte_arp_hdr/g' ${HERE}/${NAME}/$i
  sed -i s'/arp_ipv4/rte_arp_ipv4/g' ${HERE}/${NAME}/$i
  sed -i s'/arp_hrd/arp_hardware/g' ${HERE}/${NAME}/$i
  sed -i s'/arp_pro/arp_protocol/g' ${HERE}/${NAME}/$i
  sed -i s'/arp_op/arp_opcode/g' ${HERE}/${NAME}/$i
  sed -i s'/lcore_config\[lc\].f/NULL/g' ${HERE}/${NAME}/$i

done

sed -i '22 a #define __USE_GNU' ${HERE}/${NAME}/examples/l4fwd/parse.c
sed -i '23 a #include <sched.h>' ${HERE}/${NAME}/examples/l4fwd/parse.c


export ALL_DPDK_LIBS=${DPDK}/lib
export ALL_DPDK_INCS=${DPDK}/include
export PKG_CONFIG_PATH=${ALL_DPDK_LIBS}/pkgconfig
export PATH=${NINJA}/ninja:${NINJA}/meson:$PATH
export LDFLAGS="-Wl,-rpath,/usr/local/bin/cloonix/server/dpdk/lib"

cp ${HERE}/${NAME}/lib/libtle_dring/tle_dring.h ${ALL_DPDK_INCS}
cp ${HERE}/${NAME}/lib/libtle_misc/tle_dpdk_wrapper.h ${ALL_DPDK_INCS}
cp ${HERE}/${NAME}/lib/libtle_memtank/tle_memtank.h ${ALL_DPDK_INCS}
cp ${HERE}/${NAME}/lib/libtle_memtank/tle_memtank_pub.h ${ALL_DPDK_INCS}
cp ${HERE}/${NAME}/lib/libtle_timer/tle_timer.h ${ALL_DPDK_INCS}
for i in tle_tcp.h tle_ctx.h tle_udp.h tle_event.h; do
  cp ${HERE}/${NAME}/lib/libtle_l4p/${i} ${ALL_DPDK_INCS}
done

for i in "tle_dring"   \
         "tle_memtank" \
         "tle_misc"    \
         "tle_timer" ; do

  LIB_NAME=$i
  cd ${HERE}/${NAME}/lib/lib${LIB_NAME}
  rm -rf build

cat > /tmp/list_files.sh << EOF
#!/bin/bash
cd ${HERE}/${NAME}/lib/lib${LIB_NAME}
ls *.[ch]
EOF
chmod +x /tmp/list_files.sh

cat > meson.build << EOF
project('${LIB_NAME}', 'c')
dpdk = dependency('libdpdk')
incdir = include_directories('${ALL_DPDK_INCS}')
c = run_command('/tmp/list_files.sh')
sources = c.stdout().strip().split('\n')
shared_library('${LIB_NAME}', sources,
               include_directories : incdir,
               dependencies : dpdk)
EOF

  meson.py build
  cd build
  ninja
  mv lib${LIB_NAME}.so ${ALL_DPDK_LIBS}

done

LIB_NAME="tle_l4p"
cd ${HERE}/${NAME}/lib/lib${LIB_NAME}
rm -rf build

cat > /tmp/list_files.sh << EOF
#!/bin/bash
cd ${HERE}/${NAME}/lib/lib${LIB_NAME}
ls *.[ch]
EOF
chmod +x /tmp/list_files.sh

cat > meson.build << EOF
project('${LIB_NAME}', 'c')
dpdk = dependency('libdpdk')
incdir = include_directories('${ALL_DPDK_INCS}')
cmplr = meson.get_compiler('c')
dring = cmplr.find_library('libtle_dring', dirs : '${ALL_DPDK_LIBS}')
memtank = cmplr.find_library('libtle_memtank', dirs : '${ALL_DPDK_LIBS}')
timer = cmplr.find_library('libtle_timer', dirs : '${ALL_DPDK_LIBS}')
misc = cmplr.find_library('libtle_misc', dirs : '${ALL_DPDK_LIBS}')
c = run_command('/tmp/list_files.sh')
sources = c.stdout().strip().split('\n')
shared_library('${LIB_NAME}', sources,
               include_directories : incdir,
               dependencies : [dpdk, dring, memtank, timer, misc])
EOF

meson.py build
cd build
ninja
mv lib${LIB_NAME}.so ${ALL_DPDK_LIBS}
  


cd ${HERE}/${NAME}/examples/l4fwd
cat > /tmp/list_files.sh << EOF
#!/bin/bash
cd ${HERE}/${NAME}/examples/l4fwd
ls *.[ch]
EOF

chmod +x /tmp/list_files.sh
cat > meson.build << EOF
project('l4fwd', 'c')
dpdk = dependency('libdpdk')
incdir = include_directories('${ALL_DPDK_INCS}')
cmplr = meson.get_compiler('c')
dring = cmplr.find_library('libtle_dring', dirs : '${ALL_DPDK_LIBS}')
memtank = cmplr.find_library('libtle_memtank', dirs : '${ALL_DPDK_LIBS}')
timer = cmplr.find_library('libtle_timer', dirs : '${ALL_DPDK_LIBS}')
l4p = cmplr.find_library('libtle_l4p', dirs : '${ALL_DPDK_LIBS}')
misc = cmplr.find_library('libtle_misc', dirs : '${ALL_DPDK_LIBS}')
c = run_command('/tmp/list_files.sh')
sources = c.stdout().strip().split('\n')
executable('l4fwd', sources, include_directories : incdir,
            install_rpath : '/usr/local/bin/cloonix/server/dpdk/lib',
            dependencies : [dpdk, dring, memtank, timer, l4p, misc],
            install : true)

EOF

#            build_rpath : '${ALL_DPDK_LIBS}',
#            install_rpath : '/usr/local/bin/cloonix/server/dpdk/lib',

meson.py build
cd build
ninja
DESTDIR=${HERE} ninja install


#mv ${HERE}/${NAME}/examples/l4fwd/build/l4fwd ${HERE}
