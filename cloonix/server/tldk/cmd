#!/bin/bash
HERE=`pwd`
NINJA=${HERE}/../../common/meson_ninja
DPDK=${HERE}/../dpdk
TARGZSTORE=${HERE}/../../../targz_store
NAME=tldk_tainted

./allclean
./patched_create.sh

if [ ! -f ${NINJA}/ninja/ninja ]; then
  cd ${NINJA}
  ./cmd
fi

if [ ! -f ${DPDK}/bin/dpdk-testpmd ]; then
  cd ${DPDK}
  ./cmd
fi

cd ${HERE}

export ALL_DPDK_LIBS=${DPDK}/lib
export ALL_DPDK_INCS=${DPDK}/include
export PKG_CONFIG_PATH=${ALL_DPDK_LIBS}/pkgconfig
export PATH=${NINJA}/ninja:${NINJA}/meson:$PATH
export LDFLAGS="-Wl,-rpath,/usr/local/bin/cloonix/server/dpdk/lib"

cp ${HERE}/${NAME}/lib/libtle_dring/tle_dring.h ${ALL_DPDK_INCS}
cp ${HERE}/${NAME}/lib/libtle_misc/tle_dpdk_wrapper.h ${ALL_DPDK_INCS}
cp ${HERE}/${NAME}/lib/libtle_memtank/tle_memtank.h ${ALL_DPDK_INCS}
cp ${HERE}/${NAME}/lib/libtle_memtank/tle_memtank_pub.h ${ALL_DPDK_INCS}
cp ${HERE}/${NAME}/lib/libtle_timer/tle_timer.h ${ALL_DPDK_INCS}
for i in tle_tcp.h tle_ctx.h tle_udp.h tle_event.h; do
  cp ${HERE}/${NAME}/lib/libtle_l4p/${i} ${ALL_DPDK_INCS}
done

for i in "tle_dring"   \
         "tle_memtank" \
         "tle_misc"    \
         "tle_timer" ; do

  LIB_NAME=$i
  cd ${HERE}/${NAME}/lib/lib${LIB_NAME}
  rm -rf build

cat > /tmp/list_files.sh << EOF
#!/bin/bash
cd ${HERE}/${NAME}/lib/lib${LIB_NAME}
ls *.[ch]
EOF
chmod +x /tmp/list_files.sh

cat > meson.build << EOF
project('${LIB_NAME}', 'c')
dpdk = dependency('libdpdk')
incdir = include_directories('${ALL_DPDK_INCS}')
c = run_command('/tmp/list_files.sh')
sources = c.stdout().strip().split('\n')
shared_library('${LIB_NAME}', sources,
               include_directories : incdir,
               dependencies : dpdk)
EOF

  meson.py build
  cd build
  ninja
  mv lib${LIB_NAME}.so ${ALL_DPDK_LIBS}

done

LIB_NAME="tle_l4p"
cd ${HERE}/${NAME}/lib/lib${LIB_NAME}
rm -rf build

cat > /tmp/list_files.sh << EOF
#!/bin/bash
cd ${HERE}/${NAME}/lib/lib${LIB_NAME}
ls *.[ch]
EOF
chmod +x /tmp/list_files.sh

cat > meson.build << EOF
project('${LIB_NAME}', 'c')
dpdk = dependency('libdpdk')
incdir = include_directories('${ALL_DPDK_INCS}')
cmplr = meson.get_compiler('c')
dring = cmplr.find_library('libtle_dring', dirs : '${ALL_DPDK_LIBS}')
memtank = cmplr.find_library('libtle_memtank', dirs : '${ALL_DPDK_LIBS}')
timer = cmplr.find_library('libtle_timer', dirs : '${ALL_DPDK_LIBS}')
misc = cmplr.find_library('libtle_misc', dirs : '${ALL_DPDK_LIBS}')
c = run_command('/tmp/list_files.sh')
sources = c.stdout().strip().split('\n')
shared_library('${LIB_NAME}', sources,
               include_directories : incdir,
               dependencies : [dpdk, dring, memtank, timer, misc])
EOF

meson.py build
cd build
ninja
mv lib${LIB_NAME}.so ${ALL_DPDK_LIBS}
  


cd ${HERE}/${NAME}/examples/l4fwd
cat > /tmp/list_files.sh << EOF
#!/bin/bash
cd ${HERE}/${NAME}/examples/l4fwd
ls *.[ch]
EOF

chmod +x /tmp/list_files.sh
cat > meson.build << EOF
project('l4fwd', 'c')
dpdk = dependency('libdpdk')
incdir = include_directories('${ALL_DPDK_INCS}')
cmplr = meson.get_compiler('c')
dring = cmplr.find_library('libtle_dring', dirs : '${ALL_DPDK_LIBS}')
memtank = cmplr.find_library('libtle_memtank', dirs : '${ALL_DPDK_LIBS}')
timer = cmplr.find_library('libtle_timer', dirs : '${ALL_DPDK_LIBS}')
l4p = cmplr.find_library('libtle_l4p', dirs : '${ALL_DPDK_LIBS}')
misc = cmplr.find_library('libtle_misc', dirs : '${ALL_DPDK_LIBS}')
c = run_command('/tmp/list_files.sh')
sources = c.stdout().strip().split('\n')
executable('l4fwd', sources, include_directories : incdir,
            install_rpath : '/usr/local/bin/cloonix/server/dpdk/lib',
            dependencies : [dpdk, dring, memtank, timer, l4p, misc],
            install : true)

EOF

meson.py build
cd build
ninja
DESTDIR=${HERE} ninja install
mv ${HERE}/usr/local/bin/l4fwd ${DPDK}/bin 
